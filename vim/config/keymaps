""""""""""""""""""""
" keymaps
""""""""""""""""""""
" Set leader to space
let mapleader="\<Space>"

" Close buffer
" nnoremap <Leader>q :w<CR>:bd<CR>
nnoremap <Leader>q :bp\|bd! #<CR>
" nnoremap <Leader>q :bd<CR>

" Close window
nnoremap <Leader>x :close<CR>

" confirm quit all
nnoremap <C-q>q :confirm qall


" Don't remove indent from #
inoremap # X<C-H>#

" Set buffer movement to ,o ,p
nmap <Leader>p :bnext<CR>
nmap <Leader>o :bprev<CR>

" Clear search highligh on esc
nnoremap <silent> <Leader>/ :nohlsearch<CR>

" fzf
nnoremap <silent> <leader>f :GFiles<CR>
nnoremap <silent> <leader>b :Buffers<CR>
nnoremap <silent> <leader>T :BTags<CR>
nnoremap <silent> <leader>t :Tags<CR>

" nerdtree remaps
nmap <Leader>e :NERDTreeToggle<Enter>
nmap <silent> <Leader>E :NERDTreeFind<CR>

" fugative
nmap <Leader>gs :Gstatus<Enter>
nmap <Leader>gc :Gcommit<Enter>
nmap <Leader>gw :Gwrite<Enter>
nmap <Leader>gd :Gdiffsplit<Enter>

" CoC
nmap <silent><leader>gd <Plug>(coc-definition)
nmap <silent><leader>gy <Plug>(coc-type-definition)
nmap <silent><leader>gi <Plug>(coc-implementation)
nmap <silent><leader>gr <Plug>(coc-references)

" Use tab for trigger completion with characters ahead and navigate.
" NOTE: Use command ':verbose imap <tab>' to make sure tab is not mapped by
" other plugin before putting this into your config.
inoremap <silent><expr> <TAB>
      \ pumvisible() ? "\<C-n>" :
      \ <SID>check_back_space() ? "\<TAB>" :
      \ coc#refresh()
inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"

function! s:check_back_space() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~# '\s'
endfunction

" Use <c-space> to trigger completion.
if has('nvim')
  inoremap <silent><expr> <c-space> coc#refresh()
else
  inoremap <silent><expr> <c-@> coc#refresh()
endif

" Make <CR> auto-select the first completion item and notify coc.nvim to
" format on enter, <cr> could be remapped by other vim plugin
inoremap <silent><expr> <cr> pumvisible() ? coc#_select_confirm()
                              \: "\<C-g>u\<CR>\<c-r>=coc#on_enter()\<CR>"

" Highlight the symbol and its references when holding the cursor.
autocmd CursorHold * silent call CocActionAsync('highlight')

" Symbol renaming.
nmap <leader>rn <Plug>(coc-rename)
